@implements IDisposable

@inject NavigationManager NavigationManager

<nav class="navbar fixed-top navbar-expand-lg bg-dark border-bottom bg-body-tertiary" data-bs-theme="dark">
	<div class="container-fluid">
		<a class="navbar-brand" href="#">Blazor Blog</a>

		<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<div class="collapse navbar-collapse" id="navbarNavAltMarkup">
			<div class="navbar-nav me-auto mb-2 mb-lg-0">
				<a class="nav-link" href="" Match="NavLinkMatch.All">
					<span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
				</a>

				<a class="nav-link" href="counter">
					<span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
				</a>

				<a class="nav-link" href="weather">
					<span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
				</a>

				<a class="nav-link" href="auth">
					<span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
				</a>

				<AuthorizeView>
					<Authorized>
						<a class="nav-link" href="Account/Manage">
							<span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
						</a>
						<form action="Account/Logout" method="post">
							<AntiforgeryToken />
							<input type="hidden" name="ReturnUrl" value="@_currentUrl" />
							<button type="submit" class="nav-link">
								<span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
							</button>
						</form>
					</Authorized>
					<NotAuthorized>
						<a class="nav-link" href="Account/Register">
							<span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
						</a>
						<a class="nav-link" href="Account/Login">
							<span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
						</a>
					</NotAuthorized>
				</AuthorizeView>
			</div>
		</div>
	</div>
</nav>


@code {
	private string? _currentUrl;

	protected override void OnInitialized()
	{
		_currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
		NavigationManager.LocationChanged += OnLocationChanged;
	}

	private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
	{
		_currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
		StateHasChanged();
	}

	public void Dispose()
	{
		NavigationManager.LocationChanged -= OnLocationChanged;
	}
}

